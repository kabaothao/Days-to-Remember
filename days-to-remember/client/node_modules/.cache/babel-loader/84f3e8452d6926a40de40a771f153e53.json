{"ast":null,"code":"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\"; // import { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {// const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  // const [validated] = useState(false);\n  // const [showAlert, setShowAlert] = useState(false);\n  // const [login] = useMutation(LOGIN_USER);\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setUserFormData({ ...userFormData, [name]: value });\n  // };\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   // check if form has everything (as per react-bootstrap docs)\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n  //   try {\n  //     const { data } = await login({\n  //       variables: userFormData\n  //     });\n  //     if (!data) {\n  //       throw new Error(\"something went wrong!\");\n  //     }\n  //     Auth.login(data.login.token);\n  //     window.location.reload();\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n  //   setUserFormData({\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   });\n  // };\n  // return (\n  //   <>\n  //     <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n  //       <Alert\n  //         dismissible\n  //         onClose={() => setShowAlert(false)}\n  //         show={showAlert}\n  //         variant=\"danger\"\n  //       >\n  //         Something went wrong with your login credentials!\n  //       </Alert>\n  //       <Form.Group>\n  //         <Form.Label htmlFor=\"email\">Email</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           placeholder=\"Your email\"\n  //           name=\"email\"\n  //           onChange={handleInputChange}\n  //           value={userFormData.email}\n  //           required\n  //         />\n  //         <Form.Control.Feedback type=\"invalid\">\n  //           Email is required!\n  //         </Form.Control.Feedback>\n  //       </Form.Group>\n  //       <Form.Group>\n  //         <Form.Label htmlFor=\"password\">Password</Form.Label>\n  //         <Form.Control\n  //           type=\"password\"\n  //           placeholder=\"Your password\"\n  //           name=\"password\"\n  //           onChange={handleInputChange}\n  //           value={userFormData.password}\n  //           required\n  //         />\n  //         <Form.Control.Feedback type=\"invalid\">\n  //           Password is required!\n  //         </Form.Control.Feedback>\n  //       </Form.Group>\n  //       <Button\n  //         disabled={!(userFormData.email && userFormData.password)}\n  //         type=\"submit\"\n  //         variant=\"success\"\n  //       >\n  //         Submit\n  //       </Button>\n  //     </Form>\n  //   </>\n  // );\n};\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/alenakadochnikova/Desktop/project-3/Project-3/days-to-remember/client/src/components/LoginForm.js"],"names":["React","useState","Form","Button","Alert","useMutation","Auth","LoginForm"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM,CACtB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA7FD;;KAAMA,S;AA+FN,eAAeA,SAAf","sourcesContent":["// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\n\n// import { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  // const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  // const [validated] = useState(false);\n  // const [showAlert, setShowAlert] = useState(false);\n  // const [login] = useMutation(LOGIN_USER);\n  \n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setUserFormData({ ...userFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   // check if form has everything (as per react-bootstrap docs)\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   try {\n  //     const { data } = await login({\n  //       variables: userFormData\n  //     });\n  //     if (!data) {\n  //       throw new Error(\"something went wrong!\");\n  //     }\n\n  //     Auth.login(data.login.token);\n  //     window.location.reload();\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   setUserFormData({\n  //     username: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   });\n  // };\n\n  // return (\n  //   <>\n  //     <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n  //       <Alert\n  //         dismissible\n  //         onClose={() => setShowAlert(false)}\n  //         show={showAlert}\n  //         variant=\"danger\"\n  //       >\n  //         Something went wrong with your login credentials!\n  //       </Alert>\n  //       <Form.Group>\n  //         <Form.Label htmlFor=\"email\">Email</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           placeholder=\"Your email\"\n  //           name=\"email\"\n  //           onChange={handleInputChange}\n  //           value={userFormData.email}\n  //           required\n  //         />\n  //         <Form.Control.Feedback type=\"invalid\">\n  //           Email is required!\n  //         </Form.Control.Feedback>\n  //       </Form.Group>\n\n  //       <Form.Group>\n  //         <Form.Label htmlFor=\"password\">Password</Form.Label>\n  //         <Form.Control\n  //           type=\"password\"\n  //           placeholder=\"Your password\"\n  //           name=\"password\"\n  //           onChange={handleInputChange}\n  //           value={userFormData.password}\n  //           required\n  //         />\n  //         <Form.Control.Feedback type=\"invalid\">\n  //           Password is required!\n  //         </Form.Control.Feedback>\n  //       </Form.Group>\n  //       <Button\n  //         disabled={!(userFormData.email && userFormData.password)}\n  //         type=\"submit\"\n  //         variant=\"success\"\n  //       >\n  //         Submit\n  //       </Button>\n  //     </Form>\n  //   </>\n  // );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}