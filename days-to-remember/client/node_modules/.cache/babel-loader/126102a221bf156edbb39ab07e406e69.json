{"ast":null,"code":"import \"../../utilities/globals/index.js\";\nimport { useState, useRef, useEffect } from 'react';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useSubscription(subscription, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n\n  var _a = useState({\n    loading: !(options === null || options === void 0 ? void 0 : options.skip),\n    error: void 0,\n    data: void 0,\n    variables: options === null || options === void 0 ? void 0 : options.variables\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var _b = useState(function () {\n    if (options === null || options === void 0 ? void 0 : options.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options === null || options === void 0 ? void 0 : options.variables,\n      fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n      context: options === null || options === void 0 ? void 0 : options.context\n    });\n  }),\n      observable = _b[0],\n      setObservable = _b[1];\n\n  var ref = useRef({\n    client: client,\n    subscription: subscription,\n    options: options\n  });\n  useEffect(function () {\n    var _a, _b, _c, _d;\n\n    var shouldResubscribe = options === null || options === void 0 ? void 0 : options.shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options);\n    }\n\n    if ((options === null || options === void 0 ? void 0 : options.skip) && !(options === null || options === void 0 ? void 0 : options.skip) !== !((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.skip)) {\n      setResult({\n        loading: false,\n        data: void 0,\n        error: void 0,\n        variables: options === null || options === void 0 ? void 0 : options.variables\n      });\n      setObservable(null);\n    } else if (shouldResubscribe !== false && (client !== ref.current.client || subscription !== ref.current.subscription || (options === null || options === void 0 ? void 0 : options.fetchPolicy) !== ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || !(options === null || options === void 0 ? void 0 : options.skip) !== !((_c = ref.current.options) === null || _c === void 0 ? void 0 : _c.skip) || !equal(options === null || options === void 0 ? void 0 : options.variables, (_d = ref.current.options) === null || _d === void 0 ? void 0 : _d.variables))) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options === null || options === void 0 ? void 0 : options.variables\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options === null || options === void 0 ? void 0 : options.variables,\n        fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n        context: options === null || options === void 0 ? void 0 : options.context\n      }));\n    }\n\n    Object.assign(ref.current, {\n      client: client,\n      subscription: subscription,\n      options: options\n    });\n  }, [client, subscription, options]);\n  useEffect(function () {\n    if (!observable) {\n      return;\n    }\n\n    var subscription = observable.subscribe({\n      next: function (fetchResult) {\n        var _a, _b;\n\n        var result = {\n          loading: false,\n          data: fetchResult.data,\n          error: void 0,\n          variables: options === null || options === void 0 ? void 0 : options.variables\n        };\n        setResult(result);\n        (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onSubscriptionData) === null || _b === void 0 ? void 0 : _b.call(_a, {\n          client: client,\n          subscriptionData: result\n        });\n      },\n      error: function (error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error: error,\n          variables: options === null || options === void 0 ? void 0 : options.variables\n        });\n      },\n      complete: function () {\n        var _a, _b;\n\n        (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onSubscriptionComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n  return result;\n}","map":{"version":3,"sources":["../../../src/react/hooks/useSubscription.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../utilities/globals';\nimport { useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport { equal } from '@wry/equality';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport {\n  SubscriptionHookOptions,\n  SubscriptionResult\n} from '../types/types';\nimport { OperationVariables } from '../../core';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>,\n) {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n  const [result, setResult] = useState<SubscriptionResult<TData>>({\n    loading: !options?.skip,\n    error: void 0,\n    data: void 0,\n    variables: options?.variables,\n  });\n\n  const [observable, setObservable] = useState(() => {\n    if (options?.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options?.variables,\n      fetchPolicy: options?.fetchPolicy,\n      context: options?.context,\n    });\n  });\n\n  const ref = useRef({ client, subscription, options });\n  useEffect(() => {\n    let shouldResubscribe = options?.shouldResubscribe;\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options!);\n    }\n\n    if (options?.skip && !options?.skip !== !ref.current.options?.skip) {\n      setResult({\n        loading: false,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(null);\n    } else if (\n      shouldResubscribe !== false && (\n        client !== ref.current.client ||\n        subscription !== ref.current.subscription ||\n        options?.fetchPolicy !== ref.current.options?.fetchPolicy ||\n        !options?.skip !== !ref.current.options?.skip ||\n        !equal(options?.variables, ref.current.options?.variables)\n      )\n    ) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options?.variables,\n        fetchPolicy: options?.fetchPolicy,\n        context: options?.context,\n      }));\n    }\n\n    Object.assign(ref.current, { client, subscription, options });\n  }, [client, subscription, options]);\n\n  useEffect(() => {\n    if (!observable) {\n      return;\n    }\n\n    const subscription = observable.subscribe({\n      next(fetchResult) {\n        const result = {\n          loading: false,\n          // TODO: fetchResult.data can be null but SubscriptionResult.data\n          // expects TData | undefined only\n          data: fetchResult.data!,\n          error: void 0,\n          variables: options?.variables,\n        };\n        setResult(result);\n\n        ref.current.options?.onSubscriptionData?.({\n          client,\n          subscriptionData: result\n        });\n      },\n      error(error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error,\n          variables: options?.variables,\n        });\n      },\n      complete() {\n        ref.current.options?.onSubscriptionComplete?.();\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n\n  return result;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}